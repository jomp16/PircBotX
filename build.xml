<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2013 jomp16
  ~
  ~ This file is part of PircBotX
  ~
  ~ PircBotX is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ PircBotX is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with PircBotX. If not, see <http://www.gnu.org/licenses/>.
  -->

<project name="pircbotx" default="all">

    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.zip"/>
        <include name="*.apk"/>
        <include name="*.war"/>
        <include name="*.egg"/>
        <include name="*.ear"/>
        <include name="*.ane"/>
        <include name="*.swc"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="library.apache_commons.classpath">
        <pathelement location="${basedir}/lib/commons-codec-1.6.jar"/>
        <pathelement location="${basedir}/lib/commons-io-2.4.jar"/>
        <pathelement location="${basedir}/lib/commons-lang3-3.1.jar"/>
        <pathelement location="${basedir}/lib/commons-logging-1.1.1.jar"/>
        <pathelement location="${basedir}/lib/fluent-hc-4.2.3.jar"/>
        <pathelement location="${basedir}/lib/httpclient-4.2.3.jar"/>
        <pathelement location="${basedir}/lib/httpcore-4.2.2.jar"/>
    </path>

    <path id="library.gson-2.2.3.classpath">
        <pathelement location="${basedir}/lib/gson-2.2.3.jar"/>
    </path>

    <path id="library.jsoup-1.7.2.classpath">
        <pathelement location="${basedir}/lib/jsoup-1.7.2.jar"/>
    </path>

    <path id="library.lombok.classpath">
        <pathelement location="${basedir}/lib/lombok.jar"/>
    </path>

    <path id="library.pircbotx-unified.classpath">
        <pathelement location="${basedir}/lib/pircbotx-unified.jar"/>
    </path>

    <path id="library.slf4j-nop-1.7.5.classpath">
        <pathelement location="${basedir}/lib/slf4j-nop-1.7.5.jar"/>
    </path>

    <path id="library.sqlite-jdbc-3.7.15-snapshot.classpath">
        <pathelement location="${basedir}/lib/sqlite-jdbc-3.7.15-SNAPSHOT.jar"/>
    </path>

    <!-- Modules -->


    <!-- Module PircBotX -->

    <dirname property="module.pircbotx.basedir" file="${ant.file}"/>


    <property name="compiler.args.pircbotx" value="${compiler.args}"/>

    <property name="pircbotx.output.dir" value="${module.pircbotx.basedir}/target/class/PircBotX"/>
    <property name="pircbotx.testoutput.dir" value="${module.pircbotx.basedir}/target/test/PircBotX"/>

    <path id="pircbotx.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="pircbotx.module.production.classpath">
        <path refid="library.sqlite-jdbc-3.7.15-snapshot.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.slf4j-nop-1.7.5.classpath"/>
    </path>

    <path id="pircbotx.runtime.production.module.classpath">
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.sqlite-jdbc-3.7.15-snapshot.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.slf4j-nop-1.7.5.classpath"/>
    </path>

    <path id="pircbotx.module.classpath">
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.sqlite-jdbc-3.7.15-snapshot.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.slf4j-nop-1.7.5.classpath"/>
    </path>

    <path id="pircbotx.runtime.module.classpath">
        <pathelement location="${pircbotx.testoutput.dir}"/>
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.sqlite-jdbc-3.7.15-snapshot.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.slf4j-nop-1.7.5.classpath"/>
    </path>


    <patternset id="excluded.from.module.pircbotx">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.pircbotx">
        <patternset refid="excluded.from.module.pircbotx"/>
    </patternset>

    <path id="pircbotx.module.sourcepath">
        <dirset dir="${module.pircbotx.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.pircbotx" depends="compile.module.pircbotx.production,compile.module.pircbotx.tests"
            description="Compile module PircBotX"/>

    <target name="compile.module.pircbotx.production" description="Compile module PircBotX; production classes">
        <mkdir dir="${pircbotx.output.dir}"/>
        <javac includeantruntime="false" destdir="${pircbotx.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.pircbotx}"/>
            <bootclasspath refid="pircbotx.module.bootclasspath"/>
            <classpath refid="pircbotx.module.production.classpath"/>
            <src refid="pircbotx.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.pircbotx"/>
        </javac>

        <copy todir="${pircbotx.output.dir}">
            <fileset dir="${module.pircbotx.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.pircbotx.tests" depends="compile.module.pircbotx.production"
            description="compile module PircBotX; test classes" unless="skip.tests"/>

    <!-- Module Google -->

    <dirname property="module.google.basedir" file="${ant.file}"/>


    <property name="compiler.args.google" value="${compiler.args}"/>

    <property name="google.output.dir" value="${module.google.basedir}/target/class/Google"/>
    <property name="google.testoutput.dir" value="${module.google.basedir}/target/test/Google"/>

    <path id="google.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="google.module.production.classpath">
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.gson-2.2.3.classpath"/>
        <path refid="library.apache_commons.classpath"/>
    </path>

    <path id="google.runtime.production.module.classpath">
        <pathelement location="${google.output.dir}"/>
        <path refid="pircbotx.runtime.production.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.gson-2.2.3.classpath"/>
        <path refid="library.apache_commons.classpath"/>
    </path>

    <path id="google.module.classpath">
        <pathelement location="${google.output.dir}"/>
        <pathelement location="${pircbotx.testoutput.dir}"/>
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.gson-2.2.3.classpath"/>
        <path refid="library.apache_commons.classpath"/>
    </path>

    <path id="google.runtime.module.classpath">
        <pathelement location="${google.testoutput.dir}"/>
        <pathelement location="${google.output.dir}"/>
        <path refid="pircbotx.runtime.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.gson-2.2.3.classpath"/>
        <path refid="library.apache_commons.classpath"/>
    </path>


    <patternset id="excluded.from.module.google">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.google">
        <patternset refid="excluded.from.module.google"/>
    </patternset>

    <path id="google.module.sourcepath">
        <dirset dir="${module.google.basedir}/plugins_src/Google">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.google" depends="compile.module.google.production,compile.module.google.tests"
            description="Compile module Google"/>

    <target name="compile.module.google.production" depends="compile.module.pircbotx"
            description="Compile module Google; production classes">
        <mkdir dir="${google.output.dir}"/>
        <javac includeantruntime="false" destdir="${google.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.google}"/>
            <bootclasspath refid="google.module.bootclasspath"/>
            <classpath refid="google.module.production.classpath"/>
            <src refid="google.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.google"/>
        </javac>

        <copy todir="${google.output.dir}">
            <fileset dir="${module.google.basedir}/plugins_src/Google/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.google.tests" depends="compile.module.google.production"
            description="compile module Google; test classes" unless="skip.tests"/>

    <!-- Module Say -->

    <dirname property="module.say.basedir" file="${ant.file}"/>


    <property name="compiler.args.say" value="${compiler.args}"/>

    <property name="say.output.dir" value="${module.say.basedir}/target/class/Say"/>
    <property name="say.testoutput.dir" value="${module.say.basedir}/target/test/Say"/>

    <path id="say.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="say.module.production.classpath">
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
    </path>

    <path id="say.runtime.production.module.classpath">
        <pathelement location="${say.output.dir}"/>
        <path refid="pircbotx.runtime.production.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
    </path>

    <path id="say.module.classpath">
        <pathelement location="${say.output.dir}"/>
        <pathelement location="${pircbotx.testoutput.dir}"/>
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
    </path>

    <path id="say.runtime.module.classpath">
        <pathelement location="${say.testoutput.dir}"/>
        <pathelement location="${say.output.dir}"/>
        <path refid="pircbotx.runtime.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
    </path>


    <patternset id="excluded.from.module.say">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.say">
        <patternset refid="excluded.from.module.say"/>
    </patternset>

    <path id="say.module.sourcepath">
        <dirset dir="${module.say.basedir}/plugins_src/Say">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.say" depends="compile.module.say.production,compile.module.say.tests"
            description="Compile module Say"/>

    <target name="compile.module.say.production" depends="compile.module.pircbotx"
            description="Compile module Say; production classes">
        <mkdir dir="${say.output.dir}"/>
        <javac includeantruntime="false" destdir="${say.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.say}"/>
            <bootclasspath refid="say.module.bootclasspath"/>
            <classpath refid="say.module.production.classpath"/>
            <src refid="say.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.say"/>
        </javac>

        <copy todir="${say.output.dir}">
            <fileset dir="${module.say.basedir}/plugins_src/Say/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.say.tests" depends="compile.module.say.production"
            description="compile module Say; test classes" unless="skip.tests"/>


    <!-- Module URL -->

    <dirname property="module.url.basedir" file="${ant.file}"/>


    <property name="compiler.args.url" value="${compiler.args}"/>

    <property name="url.output.dir" value="${module.url.basedir}/target/class/URL"/>
    <property name="url.testoutput.dir" value="${module.url.basedir}/target/test/URL"/>

    <path id="url.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="url.module.production.classpath">
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.apache_commons.classpath"/>
        <path refid="library.jsoup-1.7.2.classpath"/>
    </path>

    <path id="url.runtime.production.module.classpath">
        <pathelement location="${url.output.dir}"/>
        <path refid="pircbotx.runtime.production.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.apache_commons.classpath"/>
        <path refid="library.jsoup-1.7.2.classpath"/>
    </path>

    <path id="url.module.classpath">
        <pathelement location="${url.output.dir}"/>
        <pathelement location="${pircbotx.testoutput.dir}"/>
        <pathelement location="${pircbotx.output.dir}"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.apache_commons.classpath"/>
        <path refid="library.jsoup-1.7.2.classpath"/>
    </path>

    <path id="url.runtime.module.classpath">
        <pathelement location="${url.testoutput.dir}"/>
        <pathelement location="${url.output.dir}"/>
        <path refid="pircbotx.runtime.module.classpath"/>
        <path refid="library.pircbotx-unified.classpath"/>
        <path refid="library.lombok.classpath"/>
        <path refid="library.apache_commons.classpath"/>
        <path refid="library.jsoup-1.7.2.classpath"/>
    </path>


    <patternset id="excluded.from.module.url">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.url">
        <patternset refid="excluded.from.module.url"/>
    </patternset>

    <path id="url.module.sourcepath">
        <dirset dir="${module.url.basedir}/plugins_src/URL">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.url" depends="compile.module.url.production,compile.module.url.tests"
            description="Compile module URL"/>

    <target name="compile.module.url.production" depends="compile.module.pircbotx"
            description="Compile module URL; production classes">
        <mkdir dir="${url.output.dir}"/>
        <javac includeantruntime="false" destdir="${url.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.url}"/>
            <bootclasspath refid="url.module.bootclasspath"/>
            <classpath refid="url.module.production.classpath"/>
            <src refid="url.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.url"/>
        </javac>

        <copy todir="${url.output.dir}">
            <fileset dir="${module.url.basedir}/plugins_src/URL/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.url.tests" depends="compile.module.url.production"
            description="compile module URL; test classes" unless="skip.tests"/>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" description="cleanup all">
        <delete dir="${basedir}/target"/>
    </target>

    <target name="build.modules"
            depends="init, clean, compile.module.pircbotx, compile.module.google, compile.module.say, compile.module.url"
            description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/target/__artifacts_temp"/>
        <property name="artifact.output.google:jar" value="${basedir}/target/plugins"/>
        <property name="artifact.output.pircbotx:jar" value="${basedir}/target"/>
        <property name="artifact.output.say:jar" value="${basedir}/target/plugins"/>
        <property name="artifact.output.url:jar" value="${basedir}/target/plugins"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.Google.jar" value="${artifacts.temp.dir}/Google.jar"/>
        <property name="temp.jar.path.PircBotX.jar" value="${artifacts.temp.dir}/PircBotX.jar"/>
        <property name="temp.jar.path.Say.jar" value="${artifacts.temp.dir}/Say.jar"/>
        <property name="temp.jar.path.URL.jar" value="${artifacts.temp.dir}/URL.jar"/>
    </target>

    <target name="artifact.google:jar" depends="init.artifacts, compile.module.google"
            description="Build &#39;Google:jar&#39; artifact">
        <property name="artifact.temp.output.google:jar" value="${artifacts.temp.dir}/Google_jar"/>
        <mkdir dir="${artifact.temp.output.google:jar}"/>
        <jar destfile="${temp.jar.path.Google.jar}" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${google.output.dir}"/>
            <zipfileset src="${basedir}/lib/gson-2.2.3.jar"/>
            <zipfileset src="${basedir}/lib/fluent-hc-4.2.3.jar"/>
            <zipfileset src="${basedir}/lib/commons-codec-1.6.jar"/>
            <zipfileset src="${basedir}/lib/httpclient-4.2.3.jar"/>
            <zipfileset src="${basedir}/lib/commons-io-2.4.jar"/>
            <zipfileset src="${basedir}/lib/httpcore-4.2.2.jar"/>
            <zipfileset src="${basedir}/lib/commons-lang3-3.1.jar"/>
            <zipfileset src="${basedir}/lib/commons-logging-1.1.1.jar"/>
            <zipfileset file="${basedir}/plugins_src/Google/plugin.properties"/>
            <zipfileset dir="${basedir}/plugins_src/Google/lang" prefix="lang"/>
        </jar>
        <copy file="${temp.jar.path.Google.jar}" tofile="${artifact.temp.output.google:jar}/Google.jar"/>
    </target>

    <target name="artifact.pircbotx:jar" depends="init.artifacts, compile.module.pircbotx"
            description="Build &#39;PircBotX:jar&#39; artifact">
        <property name="artifact.temp.output.pircbotx:jar" value="${artifacts.temp.dir}/PircBotX_jar"/>
        <mkdir dir="${artifact.temp.output.pircbotx:jar}"/>
        <manifest file="${artifacts.temp.dir}/MANIFEST.MF">
            <attribute name="Main-Class"
                       value="com.jomp16.pircbotx.Main"/>
        </manifest>
        <jar destfile="${temp.jar.path.PircBotX.jar}" manifest="${artifacts.temp.dir}/MANIFEST.MF"
             filesetmanifest="mergewithoutmain">
            <zipfileset dir="${pircbotx.output.dir}"/>
            <zipfileset dir="${basedir}/lang" prefix="lang"/>
            <zipfileset src="${basedir}/lib/pircbotx-unified.jar"/>
            <zipfileset src="${basedir}/lib/sqlite-jdbc-3.7.15-SNAPSHOT.jar"/>
            <zipfileset src="${basedir}/lib/slf4j-nop-1.7.5.jar"/>
        </jar>
        <copy file="${temp.jar.path.PircBotX.jar}" tofile="${artifact.temp.output.pircbotx:jar}/PircBotX.jar"/>
    </target>

    <target name="artifact.say:jar" depends="init.artifacts, compile.module.say"
            description="Build &#39;Say:jar&#39; artifact">
        <property name="artifact.temp.output.say:jar" value="${artifacts.temp.dir}/Say_jar"/>
        <mkdir dir="${artifact.temp.output.say:jar}"/>
        <jar destfile="${temp.jar.path.Say.jar}" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${say.output.dir}"/>
            <zipfileset dir="${basedir}/plugins_src/Say/lang" prefix="lang"/>
            <zipfileset file="${basedir}/plugins_src/Say/plugin.properties"/>
        </jar>
        <copy file="${temp.jar.path.Say.jar}" tofile="${artifact.temp.output.say:jar}/Say.jar"/>
    </target>

    <target name="artifact.url:jar" depends="init.artifacts, compile.module.url"
            description="Build &#39;URL:jar&#39; artifact">
        <property name="artifact.temp.output.url:jar" value="${artifacts.temp.dir}/URL_jar"/>
        <mkdir dir="${artifact.temp.output.url:jar}"/>
        <jar destfile="${temp.jar.path.URL.jar}" filesetmanifest="mergewithoutmain">
            <zipfileset dir="${url.output.dir}"/>
            <zipfileset src="${basedir}/lib/fluent-hc-4.2.3.jar"/>
            <zipfileset src="${basedir}/lib/commons-codec-1.6.jar"/>
            <zipfileset src="${basedir}/lib/httpclient-4.2.3.jar"/>
            <zipfileset src="${basedir}/lib/commons-io-2.4.jar"/>
            <zipfileset src="${basedir}/lib/httpcore-4.2.2.jar"/>
            <zipfileset src="${basedir}/lib/commons-lang3-3.1.jar"/>
            <zipfileset src="${basedir}/lib/commons-logging-1.1.1.jar"/>
            <zipfileset src="${basedir}/lib/jsoup-1.7.2.jar"/>
            <zipfileset dir="${basedir}/plugins_src/URL/lang" prefix="lang"/>
            <zipfileset file="${basedir}/plugins_src/URL/plugin.properties"/>
        </jar>
        <copy file="${temp.jar.path.URL.jar}" tofile="${artifact.temp.output.url:jar}/URL.jar"/>
    </target>

    <target name="build.all.artifacts"
            depends="artifact.google:jar, artifact.pircbotx:jar, artifact.say:jar, artifact.url:jar"
            description="Build all artifacts">
        <mkdir dir="${artifact.output.google:jar}"/>
        <copy todir="${artifact.output.google:jar}">
            <fileset dir="${artifact.temp.output.google:jar}"/>
        </copy>
        <mkdir dir="${artifact.output.pircbotx:jar}"/>
        <copy todir="${artifact.output.pircbotx:jar}">
            <fileset dir="${artifact.temp.output.pircbotx:jar}"/>
        </copy>
        <mkdir dir="${artifact.output.say:jar}"/>
        <copy todir="${artifact.output.say:jar}">
            <fileset dir="${artifact.temp.output.say:jar}"/>
        </copy>
        <mkdir dir="${artifact.output.url:jar}"/>
        <copy todir="${artifact.output.url:jar}">
            <fileset dir="${artifact.temp.output.url:jar}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>